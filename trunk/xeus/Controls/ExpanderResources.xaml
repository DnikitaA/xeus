<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" xmlns:d="http://schemas.microsoft.com/expression/blend/2006" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
	<!-- Resource dictionary entries should be defined here. -->

<Style TargetType ="{x:Type Expander}">
	<Setter Property="Template" Value="{DynamicResource ExpanderControlTemplate}"/>
	<Setter Property="Foreground" Value="#FFD0D0D0"/>
	<Setter Property="FontSize" Value="14"/>
</Style>
	
	<ControlTemplate x:Key="ExpanderControlTemplate" TargetType="{x:Type Expander}">
		<Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3,3,3,3">
			<DockPanel>
				<ToggleButton Margin="1,1,1,1" MinHeight="0" MinWidth="0" x:Name="HeaderSite" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" DockPanel.Dock="Top" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent, AncestorType={x:Null}}}">
					<ToggleButton.FocusVisualStyle>
						<Style>
							<Setter Property="Control.Template">
								<Setter.Value>
									<ControlTemplate>
										<Border>
											<Rectangle SnapsToDevicePixels="True" Stroke="#FF000000" StrokeDashArray="1 2" StrokeThickness="1" Margin="0,0,0,0"/>
										</Border>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ToggleButton.FocusVisualStyle>
					<ToggleButton.Style>
						<Style TargetType="{x:Type ToggleButton}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Border Padding="{TemplateBinding Padding}">
											<Grid SnapsToDevicePixels="False" Background="#00FFFFFF">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="19"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>										
													<Viewbox Margin="4,0,4,0">
													<Grid x:Name="grid">
													<Ellipse Stroke="#FF4D4D4D" StrokeThickness="1" Margin="0,0,0,0" Width="16" Height="16" Canvas.Top="0"
														Canvas.Left="0" x:Name="_circle">
														<Ellipse.Fill>
															<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																<GradientStop Color="#FF969696" Offset="0"/>
																<GradientStop Color="#FF41423E" Offset="1"/>
															</LinearGradientBrush>
														</Ellipse.Fill>
														<Ellipse.BitmapEffect>
															<DropShadowBitmapEffect Direction="321" Opacity="0.495" ShadowDepth="2" Softness="0.37"/>
														</Ellipse.BitmapEffect>
													</Ellipse>
														<Path SnapsToDevicePixels="False" StrokeThickness="1.5" x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF000000" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="Width, Height, Margin" HorizontalAlignment="Center" VerticalAlignment="Center">
															<Path.RenderTransform>
																<TransformGroup>
																	<ScaleTransform ScaleX="1" ScaleY="1"/>
																	<SkewTransform AngleX="0" AngleY="0"/>
																	<RotateTransform Angle="-90"/>
																	<TranslateTransform X="0" Y="0"/>
																</TransformGroup>
															</Path.RenderTransform>
														</Path>
													
												<Path Stretch="Fill" StrokeThickness="1" Margin="0,0.944,0,0" VerticalAlignment="Top" Width="13.5" Height="6.681" Data="F1 M22.628,30.472 C26.206762,30.472 29.200083,32.978573 29.803392,36.364162 C27.56975,37.091434 25.14831,37.443001 22.6285,37.443001 C20.108339,37.443001 17.686575,37.091335 15.452658,36.363918 C16.056067,32.978447 19.049328,30.472 22.628,30.472 z" Canvas.Left="0" Canvas.Top="0" Fill="#3DFFFFFF" HorizontalAlignment="Center"/>
													</Grid>
													</Viewbox>
												<Border Margin="5,3,3,3" Grid.Column="1" HorizontalAlignment="Left" x:Name="border" BorderBrush="#FF202020" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" RenderTransformOrigin="0.5,0.5">
													<Border.Background>
														<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
															<GradientStop Color="#FF736482" Offset="0"/>
															<GradientStop Color="#FF575757" Offset="1"/>
														</LinearGradientBrush>
													</Border.Background>
													<Border.BitmapEffect>
														<DropShadowBitmapEffect Opacity="0.53" ShadowDepth="1" Softness="0.365"/>
													</Border.BitmapEffect>
													<Border.OpacityMask>
														<RadialGradientBrush>
															<GradientStop Color="#FF000000" Offset="0"/>
															<GradientStop Color="#9BFFFFFF" Offset="1"/>
														</RadialGradientBrush>
													</Border.OpacityMask>
													<Border.RenderTransform>
														<TransformGroup>
															<ScaleTransform ScaleX="1" ScaleY="1"/>
															<SkewTransform AngleX="0" AngleY="0"/>
															<RotateTransform Angle="0"/>
															<TranslateTransform X="0" Y="0"/>
														</TransformGroup>
													</Border.RenderTransform>
													<Grid>
														<Rectangle Opacity="0.2" Fill="#FFFFFFFF" RadiusX="3" RadiusY="3" Margin="1,1,1,0" VerticalAlignment="Top" Height="12"/>
														<ContentPresenter SnapsToDevicePixels="True" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="True" VerticalAlignment="Center" Margin="8,2,8,2"/>
												</Grid>
												</Border>
											</Grid>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsPressed" Value="True">
												<Setter Property="RenderTransform" TargetName="border">
													<Setter.Value>
														<TransformGroup>
															<ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
															<SkewTransform AngleX="0" AngleY="0"/>
															<RotateTransform Angle="0"/>
															<TranslateTransform X="0" Y="0"/>
														</TransformGroup>
													</Setter.Value>
												</Setter>
											</Trigger>
											<Trigger Property="IsChecked" Value="True">
												<Setter Property="RenderTransform" TargetName="arrow">
													<Setter.Value>
														<TransformGroup>
															<ScaleTransform ScaleX="1" ScaleY="1"/>
															<SkewTransform AngleX="0" AngleY="0"/>
															<RotateTransform/>
															<TranslateTransform X="0" Y="0"/>
														</TransformGroup>
													</Setter.Value>
												</Setter>
												<Setter Property="Fill" TargetName="_circle">
													<Setter.Value>
														<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
															<GradientStop Color="#FF909289" Offset="0"/>
															<GradientStop Color="#FF555553" Offset="1"/>
														</LinearGradientBrush>
													</Setter.Value>
												</Setter>
											</Trigger>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="Fill" TargetName="_circle">
													<Setter.Value>
														<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
															<GradientStop Color="#FFC5D1BF" Offset="0"/>
															<GradientStop Color="#FF646961" Offset="1"/>
														</LinearGradientBrush>
													</Setter.Value>
												</Setter>
												<Setter Property="Background" TargetName="border">
													<Setter.Value>
														<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
															<GradientStop Color="#FF7F5A82" Offset="0"/>
															<GradientStop Color="#FF757575" Offset="1"/>
														</LinearGradientBrush>
													</Setter.Value>
												</Setter>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ToggleButton.Style>
				</ToggleButton>
				<ContentPresenter Focusable="False" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Bottom" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
			</DockPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsExpanded" Value="True">
				<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
			</Trigger>
			<Trigger Property="ExpandDirection" Value="Right">
				<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
				<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
				<Setter Property="Style" TargetName="HeaderSite">
					<Setter.Value>
						<Style TargetType="{x:Type ToggleButton}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Border Padding="{TemplateBinding Padding}">
											<Grid SnapsToDevicePixels="False" Background="#00FFFFFF">
												<Grid.RowDefinitions>
													<RowDefinition Height="19"/>
													<RowDefinition Height="*"/>
												</Grid.RowDefinitions>
												<Microsoft_Windows_Themes:ClassicBorderDecorator SnapsToDevicePixels="True" x:Name="Bd" Width="19" Height="19" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" BorderStyle="None" BorderThickness="1,1,1,1">
													<Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
														<SolidColorBrush/>
													</Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
													<Path SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" Data="M1,1.5L4.5,5 8,1.5">
														<Path.LayoutTransform>
															<RotateTransform Angle="-90"/>
														</Path.LayoutTransform>
													</Path>
												</Microsoft_Windows_Themes:ClassicBorderDecorator>
												<ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" Grid.Row="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="True"/>
											</Grid>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsChecked" Value="True">
												<Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
											</Trigger>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="BorderStyle" TargetName="Bd" Value="ThinRaised"/>
											</Trigger>
											<Trigger Property="IsPressed" Value="True">
												<Setter Property="BorderStyle" TargetName="Bd" Value="ThinPressed"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="ExpandDirection" Value="Up">
				<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
				<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
				<Setter Property="Style" TargetName="HeaderSite">
					<Setter.Value>
						<Style TargetType="{x:Type ToggleButton}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Border Padding="{TemplateBinding Padding}">
											<Grid SnapsToDevicePixels="False" Background="#00FFFFFF">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="19"/>
													<ColumnDefinition Width="*"/>
												</Grid.ColumnDefinitions>
												<Microsoft_Windows_Themes:ClassicBorderDecorator SnapsToDevicePixels="True" x:Name="Bd" Width="19" Height="19" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" BorderStyle="None" BorderThickness="1,1,1,1">
													<Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
														<SolidColorBrush/>
													</Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
													<Path SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" Data="M1,1.5L4.5,5 8,1.5">
														<Path.LayoutTransform>
															<RotateTransform Angle="180"/>
														</Path.LayoutTransform>
													</Path>
												</Microsoft_Windows_Themes:ClassicBorderDecorator>
												<ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,0,0,0" VerticalAlignment="Center" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="True"/>
											</Grid>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsChecked" Value="True">
												<Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
											</Trigger>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="BorderStyle" TargetName="Bd" Value="ThinRaised"/>
											</Trigger>
											<Trigger Property="IsPressed" Value="True">
												<Setter Property="BorderStyle" TargetName="Bd" Value="ThinPressed"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="ExpandDirection" Value="Left">
				<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
				<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
				<Setter Property="Style" TargetName="HeaderSite">
					<Setter.Value>
						<Style TargetType="{x:Type ToggleButton}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Border Padding="{TemplateBinding Padding}">
											<Grid SnapsToDevicePixels="False" Background="#00FFFFFF">
												<Grid.RowDefinitions>
													<RowDefinition Height="19"/>
													<RowDefinition Height="*"/>
												</Grid.RowDefinitions>
												<Microsoft_Windows_Themes:ClassicBorderDecorator SnapsToDevicePixels="True" x:Name="Bd" Width="19" Height="19" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" BorderStyle="None" BorderThickness="1,1,1,1">
													<Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
														<SolidColorBrush/>
													</Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
													<Path SnapsToDevicePixels="False" Stroke="{TemplateBinding Foreground}" StrokeThickness="1.5" HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" Data="M1,1.5L4.5,5 8,1.5">
														<Path.LayoutTransform>
															<RotateTransform Angle="90"/>
														</Path.LayoutTransform>
													</Path>
												</Microsoft_Windows_Themes:ClassicBorderDecorator>
												<ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" Grid.Row="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="True"/>
											</Grid>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsChecked" Value="True">
												<Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
											</Trigger>
											<Trigger Property="IsMouseOver" Value="True">
												<Setter Property="BorderStyle" TargetName="Bd" Value="ThinRaised"/>
											</Trigger>
											<Trigger Property="IsPressed" Value="True">
												<Setter Property="BorderStyle" TargetName="Bd" Value="ThinPressed"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
</ResourceDictionary>