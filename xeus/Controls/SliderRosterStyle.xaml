<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
	<!-- Resource dictionary entries should be defined here. -->

	<Style x:Key="SliderStyleRoster" TargetType="{x:Type Slider}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
		<Setter Property="Background" Value="#00FFFFFF"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Border Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" TextElement.Foreground="#FF515151" Fill="#FF494949" Placement="Top" TickFrequency="5"/>
							<Track x:Name="PART_Track" Grid.Row="1" Margin="0,0,0,15.5">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="Slider.DecreaseLarge">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="Background" Value="#00FFFFFF"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Border Background="{TemplateBinding Background}"/>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
									</RepeatButton>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="Slider.IncreaseLarge">
										<RepeatButton.Style>
											<Style TargetType="{x:Type RepeatButton}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="Background" Value="#00FFFFFF"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type RepeatButton}">
															<Border Background="{TemplateBinding Background}"/>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</RepeatButton.Style>
									</RepeatButton>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb x:Name="Thumb" Height="13">
										<Thumb.Style>
											<Style TargetType="{x:Type Thumb}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="Foreground" Value="{x:Null}"/>
												<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
												<Setter Property="Height" Value="21"/>
												<Setter Property="Width" Value="11"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Thumb}">
																<Rectangle Fill="{TemplateBinding Foreground}" Margin="-1,-1,-1,-1" x:Name="ForegroundRect"/>
															<ControlTemplate.Triggers>
																<Trigger Property="IsDragging" Value="True">
																	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Thumb.Style>
									</Thumb>
								</Track.Thumb>
							</Track>
							<TickBar Visibility="Collapsed" x:Name="BottomTick" Height="4" Grid.Row="2" Placement="Bottom"/>
							<Path Stretch="Fill" Stroke="#FF000000" Margin="0,5.75,0,0" x:Name="path1" VerticalAlignment="Top" Height="1" Grid.Row="1" Panel.ZIndex="-1" Data="M0,10.25 L124.77505,10.25" Opacity="0.2"/>
							<Path Stretch="Fill" Stroke="#FFFFFFFF" Margin="0,7,0,0" x:Name="path" VerticalAlignment="Top" Height="1" Grid.Row="1" Panel.ZIndex="-1" Data="M0,11.5 L124.75401,11.5" Opacity="0.05"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="TickPlacement" Value="TopLeft">
							<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
							<Setter Property="Style" TargetName="Thumb">
								<Setter.Value>
									<Style TargetType="{x:Type Thumb}">
										<Setter Property="OverridesDefaultStyle" Value="True"/>
										<Setter Property="Foreground" Value="{x:Null}"/>
										<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
										<Setter Property="Height" Value="21"/>
										<Setter Property="Width" Value="11"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Thumb}">
													<Canvas SnapsToDevicePixels="True">
														<Path Stretch="Fill" Stroke="#FF4E4E4E" x:Name="rectangle" Width="11" Height="12.827" >
															<Path.Fill>
																<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																	<GradientStop Color="#FF404040" Offset="0"/>
																	<GradientStop Color="#FF242424" Offset="0.995"/>
																</LinearGradientBrush>
															</Path.Fill>
															<Path.Data>
																<PathGeometry>
																	<PathFigure IsClosed="True" StartPoint="0.5,2.5">
																		<PolyBezierSegment Points="0.5,1.3954305 5.6666667,-2.8332922 5.6666667,-2.8332922 5.6666667,-2.8332922 11,1.3954305 11,2.5"/>
																		<LineSegment IsSmoothJoin="True" Point="11,7.33253603221447"/>
																		<BezierSegment IsSmoothJoin="True" Point1="11,8.43710553187605" Point2="10.1045694996616,9.33253603221447" Point3="9,9.33253603221447"/>
																		<LineSegment IsSmoothJoin="True" Point="2.5,9.33253603221447"/>
																		<BezierSegment IsSmoothJoin="True" Point1="1.39543050033841,9.33253603221447" Point2="0.5,8.43710553187605" Point3="0.5,7.33253603221447"/>
																	</PathFigure>
																</PathGeometry>
															</Path.Data>
														</Path>
														<Path Fill="#FF909090" Stretch="Fill" x:Name="path" Width="4.166" Height="7.499" Data="M5.077151,7.7140182 L1.970213,11.191886 1.9341582,14.167392 5.2081309,11.298684" Canvas.Left="1.334" Canvas.Top="1.417"/>
													</Canvas>
													<ControlTemplate.Triggers>
														<Trigger Property="IsDragging" Value="True">
															<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
														</Trigger>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Fill" TargetName="rectangle">
																<Setter.Value>
																	<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
																		<GradientStop Color="#FF6389A4" Offset="0"/>
																		<GradientStop Color="#FF395269" Offset="1"/>
																	</LinearGradientBrush>
																</Setter.Value>
															</Setter>
															<Setter Property="Fill" TargetName="path" Value="#FFB2B0B0"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="TickPlacement" Value="BottomRight">
							<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
							<Setter Property="Style" TargetName="Thumb">
								<Setter.Value>
									<Style TargetType="{x:Type Thumb}">
										<Setter Property="OverridesDefaultStyle" Value="True"/>
										<Setter Property="Foreground" Value="{x:Null}"/>
										<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
										<Setter Property="Height" Value="21"/>
										<Setter Property="Width" Value="11"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Thumb}">
													<Canvas SnapsToDevicePixels="True">
														<Path Fill="{TemplateBinding Background}" Data="M11,0L0,0 0,15 5,21 6,21 11,15z"/>
														<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1" Data="M10,0.5L0.5,0.5 0.5,15.5 5,20.5 5.5,20.5"/>
														<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Data="M5.5,20.5L6,20.5 10.5,15.5 10.5,0"/>
														<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1" Data="M9,1.5L1.5,1.5 1.5,15.5 5,19.5 5.5,19.5"/>
														<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1" Data="M5.5,19.5L6,19.5 9.5,15.5 9.5,1"/>
														<Path Opacity="0.5" Fill="{TemplateBinding Foreground}" Data="M9,2L2,2 2,15 5.5,19 9,15z"/>
													</Canvas>
													<ControlTemplate.Triggers>
														<Trigger Property="IsDragging" Value="True">
															<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
														</Trigger>
														<Trigger Property="IsEnabled" Value="False">
															<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="TickPlacement" Value="Both">
							<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
							<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsSelectionRangeEnabled" Value="True"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Slider}">
							<Border Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*"/>
									</Grid.RowDefinitions>
									<TickBar Visibility="Collapsed" x:Name="LeftTick" Width="4" Fill="{TemplateBinding Foreground}" Placement="Left"/>
										<Canvas Margin="-2,-2,-2,-2">
											<Rectangle Visibility="Hidden" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" x:Name="PART_SelectionRange" Width="4"/>
										</Canvas>
									<Track x:Name="PART_Track" Grid.Column="1">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="Slider.DecreaseLarge">
												<RepeatButton.Style>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="IsTabStop" Value="False"/>
														<Setter Property="Focusable" Value="False"/>
														<Setter Property="Background" Value="#00FFFFFF"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type RepeatButton}">
																	<Border Background="{TemplateBinding Background}"/>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</RepeatButton.Style>
											</RepeatButton>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="Slider.IncreaseLarge">
												<RepeatButton.Style>
													<Style TargetType="{x:Type RepeatButton}">
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="IsTabStop" Value="False"/>
														<Setter Property="Focusable" Value="False"/>
														<Setter Property="Background" Value="#00FFFFFF"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type RepeatButton}">
																	<Border Background="{TemplateBinding Background}"/>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</RepeatButton.Style>
											</RepeatButton>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb x:Name="Thumb">
												<Thumb.Style>
													<Style TargetType="{x:Type Thumb}">
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="Foreground" Value="{x:Null}"/>
														<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
														<Setter Property="Width" Value="21"/>
														<Setter Property="Height" Value="11"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type Thumb}">
																		<Rectangle Opacity="0.5" Fill="{TemplateBinding Foreground}" Margin="-1,-1,-1,-1"/>
																	<ControlTemplate.Triggers>
																		<Trigger Property="IsDragging" Value="True">
																			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																		</Trigger>
																		<Trigger Property="IsEnabled" Value="False">
																			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																		</Trigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</Thumb.Style>
											</Thumb>
										</Track.Thumb>
									</Track>
									<TickBar Visibility="Collapsed" x:Name="RightTick" Width="4" Grid.Column="2" Grid.RowSpan="3" Fill="{TemplateBinding Foreground}" Placement="Right"/>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="TickPlacement" Value="TopLeft">
									<Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
									<Setter Property="Style" TargetName="Thumb">
										<Setter.Value>
											<Style TargetType="{x:Type Thumb}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="Foreground" Value="{x:Null}"/>
												<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
												<Setter Property="Width" Value="21"/>
												<Setter Property="Height" Value="11"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Thumb}">
															<Canvas SnapsToDevicePixels="True">
																<Path Fill="{TemplateBinding Background}" Data="M21,11L21,0 6,0 0,5 0,6 6,11z"/>
																<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1" Data="M20,0.5L5.5,0.5 0.5,5 0.5,5.5"/>
																<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Data="M0.5,5.5L0.5,6 5.5,10.5 20.5,10.5 20.5,0"/>
																<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1" Data="M19,1.5L5.5,1.5 1.5,5 1.5,5.5"/>
																<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1" Data="M1.5,5.5L1.5,6 5.5,9.5 19.5,9.5 19.5,1"/>
																<Path Opacity="0.5" Fill="{TemplateBinding Foreground}" Data="M19,9L19,2 6,2 2,5.5 6,9z"/>
															</Canvas>
															<ControlTemplate.Triggers>
																<Trigger Property="IsDragging" Value="True">
																	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Setter.Value>
									</Setter>
								</Trigger>
								<Trigger Property="TickPlacement" Value="BottomRight">
									<Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
									<Setter Property="Style" TargetName="Thumb">
										<Setter.Value>
											<Style TargetType="{x:Type Thumb}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="BorderThickness" Value="0,0,0,0"/>
												<Setter Property="Foreground" Value="{x:Null}"/>
												<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
												<Setter Property="Width" Value="21"/>
												<Setter Property="Height" Value="11"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Thumb}">
															<Canvas SnapsToDevicePixels="True">
																<Path Fill="{TemplateBinding Background}" Data="M0,11L0,0 15,0 21,5 21,6 15,11z"/>
																<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1" Data="M0.5,10L0.5,0.5 15.5,0.5 20.5,5 20.5,5.5"/>
																<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Data="M20.5,5.5L20.5,6 15.5,10.5 0,10.5"/>
																<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1" Data="M1.5,9L1.5,1.5 15.5,1.5 19.5,5 19.5,5.5"/>
																<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1" Data="M19.5,5.5L19.5,6 15.5,9.5 1,9.5"/>
																<Path Opacity="0.5" Fill="{TemplateBinding Foreground}" Data="M2,9L2,2 15,2 19,5.5 15,9"/>
															</Canvas>
															<ControlTemplate.Triggers>
																<Trigger Property="IsDragging" Value="True">
																	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Setter.Value>
									</Setter>
								</Trigger>
								<Trigger Property="TickPlacement" Value="Both">
									<Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
									<Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
								</Trigger>
								<Trigger Property="IsSelectionRangeEnabled" Value="True">
									<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>